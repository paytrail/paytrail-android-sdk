/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package fi.paytrail.sdk.apiclient.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * Payment report request
 *
 * @param requestType In which format is the report delivered in
 * @param callbackUrl To which URL is the report delivered to. Callback URLs must use HTTPS
 * @param paymentStatus How are the payments statuses filtered. \"Default\" includes both paid and settled payments. \"Paid\" includes paid payments that have not been settled yet. \"All\" includes everything, for example unpaid or failed payments.
 * @param startDate Filter out payments created before given datetime.
 * @param endDate Filter out payments created after given datetime.
 * @param limit Limit the amount of payments included in the report.
 * @param reportFields Limit the amount of fields included in the report. By default all fields are included.
 * @param submerchant Get submerchant's payment report
 */
@Serializable
data class PaymentReportRequest(

    /* In which format is the report delivered in */
    @SerialName(value = "requestType")
    val requestType: PaymentReportRequest.RequestType,

    /* To which URL is the report delivered to. Callback URLs must use HTTPS */
    @SerialName(value = "callbackUrl")
    val callbackUrl: kotlin.String,

    /* How are the payments statuses filtered. \"Default\" includes both paid and settled payments. \"Paid\" includes paid payments that have not been settled yet. \"All\" includes everything, for example unpaid or failed payments. */
    @SerialName(value = "paymentStatus")
    val paymentStatus: PaymentReportRequest.PaymentStatus? = PaymentStatus.Default,

    /* Filter out payments created before given datetime. */
    @SerialName(value = "startDate")
    val startDate: kotlin.String? = null,

    /* Filter out payments created after given datetime. */
    @SerialName(value = "endDate")
    val endDate: kotlin.String? = null,

    /* Limit the amount of payments included in the report. */
    @SerialName(value = "limit")
    val limit: kotlin.Int? = 50000,

    /* Limit the amount of fields included in the report. By default all fields are included. */
    @SerialName(value = "reportFields")
    val reportFields: kotlin.collections.List<PaymentReportRequest.ReportFields>? = null,

    /* Get submerchant's payment report */
    @SerialName(value = "submerchant")
    val submerchant: kotlin.Int? = null,

) {

    /**
     * In which format is the report delivered in
     *
     * Values: Json,Csv
     */
    @Serializable
    enum class RequestType(val value: kotlin.String) {
        @SerialName(value = "json")
        Json("json"),

        @SerialName(value = "csv")
        Csv("csv"),
    }

    /**
     * How are the payments statuses filtered. \"Default\" includes both paid and settled payments. \"Paid\" includes paid payments that have not been settled yet. \"All\" includes everything, for example unpaid or failed payments.
     *
     * Values: Default,All,Paid,Settled
     */
    @Serializable
    enum class PaymentStatus(val value: kotlin.String) {
        @SerialName(value = "default")
        Default("default"),

        @SerialName(value = "all")
        All("all"),

        @SerialName(value = "paid")
        Paid("paid"),

        @SerialName(value = "settled")
        Settled("settled"),
    }

    /**
     * Limit the amount of fields included in the report. By default all fields are included.
     *
     * Values: EntryDate,Created,Amount,Status,Firstname,Familyname,Description,Reference,PaymentMethod,Stamp,Address,Postcode,Postoffice,Country,CheckoutReference,ArchiveNumber,PayerName,SettlementId,SettlementDate,OriginalTradeReference,VatPercentage,VatAmount,PaymentMethodFee,PaymentMethodCommission,ShopInShopCommission,ShopInShopCommissionVatPercentage,ShopInShopCommissionVatAmount,Refunditems
     */
    @Serializable
    enum class ReportFields(val value: kotlin.String) {
        @SerialName(value = "entryDate")
        EntryDate("entryDate"),

        @SerialName(value = "created")
        Created("created"),

        @SerialName(value = "amount")
        Amount("amount"),

        @SerialName(value = "status")
        Status("status"),

        @SerialName(value = "firstname")
        Firstname("firstname"),

        @SerialName(value = "familyname")
        Familyname("familyname"),

        @SerialName(value = "description")
        Description("description"),

        @SerialName(value = "reference")
        Reference("reference"),

        @SerialName(value = "paymentMethod")
        PaymentMethod("paymentMethod"),

        @SerialName(value = "stamp")
        Stamp("stamp"),

        @SerialName(value = "address")
        Address("address"),

        @SerialName(value = "postcode")
        Postcode("postcode"),

        @SerialName(value = "postoffice")
        Postoffice("postoffice"),

        @SerialName(value = "country")
        Country("country"),

        @SerialName(value = "checkoutReference")
        CheckoutReference("checkoutReference"),

        @SerialName(value = "archiveNumber")
        ArchiveNumber("archiveNumber"),

        @SerialName(value = "payerName")
        PayerName("payerName"),

        @SerialName(value = "settlementId")
        SettlementId("settlementId"),

        @SerialName(value = "settlementDate")
        SettlementDate("settlementDate"),

        @SerialName(value = "originalTradeReference")
        OriginalTradeReference("originalTradeReference"),

        @SerialName(value = "vatPercentage")
        VatPercentage("vatPercentage"),

        @SerialName(value = "vatAmount")
        VatAmount("vatAmount"),

        @SerialName(value = "paymentMethodFee")
        PaymentMethodFee("paymentMethodFee"),

        @SerialName(value = "paymentMethodCommission")
        PaymentMethodCommission("paymentMethodCommission"),

        @SerialName(value = "shopInShopCommission")
        ShopInShopCommission("shopInShopCommission"),

        @SerialName(value = "shopInShopCommissionVatPercentage")
        ShopInShopCommissionVatPercentage("shopInShopCommissionVatPercentage"),

        @SerialName(value = "shopInShopCommissionVatAmount")
        ShopInShopCommissionVatAmount("shopInShopCommissionVatAmount"),

        @SerialName(value = "refunditems")
        Refunditems("refunditems"),
    }
}
